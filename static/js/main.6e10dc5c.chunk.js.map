{"version":3,"sources":["redux/ducks/Authentication.js","components/IdleTimerDialog.jsx","pages/Main.jsx","pages/LoginPage.jsx","services/UserServices.js","pages/Register.jsx","components/RequireAuth.jsx","services/PostService.js","redux/ducks/Snackbar.js","redux/ducks/Trigger.js","components/CreatePost.jsx","components/Post.jsx","pages/NewsFeed.jsx","pages/CreatePost.jsx","components/CustomizedSnackBar.jsx","pages/Error.jsx","pages/NewsFeedUser.jsx","App.js","reportWebVitals.js","redux/sagas/requests/Authentication.js","redux/sagas/handlers/Authentication.js","redux/sagas/rootSaga.js","redux/ConfigureStore.js","index.js"],"names":["LOGIN_USER","LOGOUT_USER","REFRESH_TOKEN","SET_AUTHENTICATED","loginUser","data","type","payload","logoutUser","console","log","setAuthenticated","authenticated","username","name","initialState","reducerAuth","state","action","IdleTimerDialog","useState","open","setOpen","idleTimerRef","useRef","sessionTimeoutRef","dispatch","useDispatch","isLoggedIn","useSelector","auth","logOut","clearTimeout","current","stayActive","ref","timeout","onIdle","setTimeout","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","Main","anchorEl","setAnchorEl","navigate","useNavigate","handleClose","useEffect","Box","AppBar","position","Toolbar","Grid","container","direction","justifyContent","alignItems","item","Typography","variant","IconButton","size","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","MenuItem","xs","md","useStyles","makeStyles","theme","centerDiv","minWidth","left","top","transform","paperStyles","padding","spacing","buttonBlock","width","margin","display","LoginPage","classes","className","Paper","paperStyle","justify","src","process","height","backgroundRepeat","backgroundSize","alt","LoginForm","initialValues","password","style","validationSchema","Yup","shape","required","onSubmit","values","formikHelpers","errors","isSubmitting","isValidating","textAlign","component","as","TextField","label","InputProps","startAdornment","InputAdornment","LockRounded","marginBottom","disabled","instance","axios","create","wrapDiv","regPaper","align","passwordConfirmation","Register","min","max","test","value","context","matches","oneOf","url","JSON","stringify","post","then","res","status","catch","createUser","response","FormGroup","autoComplete","Link","RequireAuth","to","API_URL","a","get","constructor","toString","indexOf","delete","defaults","withCredentials","SET_SNACKBAR","snackbarOpen","snackbarType","snackbarMessage","setSnackbar","reducerSnackbar","SET_TRUE","SET_FALSE","boolTrigger","setTrigger","resetTrigger","triggerReducer","title","message","CreatePost","React","createPost","multiline","rows","cardStyle","cardActions","alignItem","PostWithOutImage","props","_id","currentUsername","Card","CardActionArea","CardContent","gutterBottom","CardActions","sx","flexDirection","p","m","fontSize","deleteById","valueOf","NewsFeed","postList","setPostLists","stableDispatch","useCallback","reload","trigger","getAllPost","length","map","eachItem","key","root","marginTop","CustomizedSnackbars","snackbar","reason","autoHideDuration","Alert","elevation","Error","NewsFeedUser","stableNavigate","location","useLocation","getPostsByUsername","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","authenticationUser","request","method","refreshToken","cancelToken","handleLoginUser","handleRefreshToken","handleLogoutUser","call","put","authentication","watcherSaga","takeLatest","persistedState","serializedState","localStorage","getItem","parse","e","loadFromLocalStorage","rootReducer","combineReducers","snackbarReducer","authReducer","sagaMiddleware","createSagaMiddleware","middleware","logger","store","createStore","composeWithDevTools","applyMiddleware","subscribe","setItem","saveToLocalStorage","getState","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e10dc5c.chunk.js","sourcesContent":["export const LOGIN_USER = \"LOGIN_USER\";\r\nexport const LOGOUT_USER = \"LOGOUT_TOKEN\";\r\nexport const REFRESH_TOKEN = \"REFRESH_TOKEN\";\r\nconst SET_AUTHENTICATED = \"SET_AUTHENTICATED\";\r\n\r\nexport const loginUser = data => ({\r\n  type: LOGIN_USER,\r\n  payload: data,\r\n});\r\n\r\nexport const logoutUser = () => {\r\n  console.log(\"Log out Action Initiated\");\r\n  return {\r\n    type: LOGOUT_USER,\r\n  };\r\n};\r\n\r\nexport const refreshToken = () => {\r\n  console.log(\"Refresh Token Action Initiated\");\r\n  return {\r\n    type: REFRESH_TOKEN,\r\n  };\r\n};\r\n\r\nexport const setAuthenticated = (authenticated, username, name) => ({\r\n  type: SET_AUTHENTICATED,\r\n  authenticated,\r\n  username,\r\n  name,\r\n});\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  username: null,\r\n  name: null,\r\n};\r\n\r\nconst reducerAuth = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTHENTICATED:\r\n      const { authenticated, username, name } = action;\r\n      return { ...state, authenticated, username, name };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducerAuth;\r\n","import React, { useState, useRef } from \"react\";\r\nimport IdleTimer from \"react-idle-timer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutUser, refreshToken } from \"../redux/ducks/Authentication\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nexport default function IdleTimerDialog() {\r\n  const [open, setOpen] = useState(false);\r\n  const idleTimerRef = useRef(null);\r\n  const sessionTimeoutRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  //   const classes = useStyles();\r\n\r\n  const isLoggedIn = useSelector(state => state.auth.authenticated);\r\n\r\n  const onIdle = () => {\r\n    console.log(\"User is idle\");\r\n    setOpen(true);\r\n    sessionTimeoutRef.current = setTimeout(logOut, 60 * 1000);\r\n  };\r\n\r\n  const logOut = () => {\r\n    setOpen(false);\r\n    dispatch(logoutUser());\r\n    // setIsLoggedIn(false);\r\n    clearTimeout(sessionTimeoutRef.current);\r\n    console.log(\"User has been logged out\");\r\n  };\r\n  const stayActive = () => {\r\n    setOpen(false);\r\n    dispatch(refreshToken());\r\n    clearTimeout(sessionTimeoutRef.current);\r\n    console.log(\"User is active\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn && (\r\n        <IdleTimer ref={idleTimerRef} timeout={1000 * 10} onIdle={onIdle} />\r\n      )}\r\n      <Dialog open={open} onClose={stayActive}>\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"You've been idle for a while!\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            You will be logged out soon\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={logOut} color=\"primary\">\r\n            Log Out\r\n          </Button>\r\n          <Button onClick={stayActive} color=\"primary\" autoFocus>\r\n            Stay Active\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Box,\r\n  IconButton,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport { Outlet } from \"react-router\";\r\nimport IdleTimerDialog from \"../components/IdleTimerDialog\";\r\nimport { logoutUser } from \"../redux/ducks/Authentication\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Main() {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch(logoutUser());\r\n    handleClose();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const auth = useSelector(state => state.auth.authenticated);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Main Page Loaded\");\r\n    console.log(\"Auth : \" + auth);\r\n    if (!auth) navigate(\"/\");\r\n  }, [auth, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <IdleTimerDialog />\r\n      <Box>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <Grid container direction=\"column\" justifyContent=\"center\">\r\n                  <Grid item>\r\n                    {\" \"}\r\n                    <Typography variant=\"h6\">Social Media App</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" justifyContent=\"center\">\r\n                  <Grid item>\r\n                    {\" \"}\r\n                    <Typography variant=\"h6\">Posts Feed</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <IconButton\r\n                  size=\"large\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\"\r\n                  onClick={handleMenu}\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorEl}\r\n                  anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={handleClose}\r\n                >\r\n                  {/* <MenuItem onClick={handleClose}>Profile</MenuItem> */}\r\n                  <MenuItem onClick={logout}>Log Out</MenuItem>\r\n                </Menu>\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n      <Box>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs={0} md={3}>\r\n            <div />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Outlet />\r\n          </Grid>\r\n          <Grid item xs={0} md={3}>\r\n            <div />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  makeStyles,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ErrorMessage, Form, Formik, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { LockRounded, AccountCircle } from \"@material-ui/icons\";\r\nimport { loginUser } from \"../redux/ducks/Authentication\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  centerDiv: {\r\n    minWidth: \"900px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    top: \"40%\",\r\n    transform: \"translate(-50%, -40%)\",\r\n  },\r\n  paperStyles: {\r\n    minWidth: \"900px\",\r\n    padding: theme.spacing(20, 20),\r\n  },\r\n  buttonBlock: {\r\n    width: \"90%\",\r\n    margin: \"auto auto\",\r\n    display: \"block\",\r\n  },\r\n}));\r\n\r\nexport default function LoginPage() {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const auth = useSelector(state => state.auth.authenticated);\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      navigate(\"/home\");\r\n    }\r\n  }, [auth, navigate]);\r\n\r\n  return (\r\n    <div className={classes.centerDiv}>\r\n      <Paper className={classes.paperStyle}>\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={8}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + \"/assets/login_side.svg\"}\r\n              width=\"100%\"\r\n              height=\"auto\"\r\n              backgroundRepeat=\"no-repeat\"\r\n              backgroundSize=\"cover\"\r\n              alt=\"logo\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <LoginForm />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst initialValues = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nfunction LoginForm() {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div style={{ width: 250 }}>\r\n      <Grid container justify=\"center\">\r\n        <img\r\n          src={process.env.PUBLIC_URL + \"/assets/login_top.svg\"}\r\n          width={200}\r\n          alt=\"logo\"\r\n          style={{ padding: \"20px 20px 20px 20px\" }}\r\n        />\r\n      </Grid>\r\n      <div style={{ height: 20 }}></div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={Yup.object().shape({\r\n          username: Yup.string().required(\"Username is required\"),\r\n          password: Yup.string().required(\"Password is required\"),\r\n        })}\r\n        onSubmit={(values, formikHelpers) => {\r\n          console.log(\"Submition Done\");\r\n          console.log(values);\r\n          dispatch(loginUser(values));\r\n          // errorVisible = true;\r\n          // console.log(\"dispatch done outside :\" + auth);\r\n        }}\r\n      >\r\n        {({ values, errors, isSubmitting, isValidating }) => (\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            <Grid item>\r\n              <Typography component=\"h1\" variant=\"h6\">\r\n                Social Media App\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography component=\"h1\" variant=\"h6\">\r\n                Sign in\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              container\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              spacing={3}\r\n            >\r\n              <Form>\r\n                <Grid item>\r\n                  <Field\r\n                    required\r\n                    name=\"username\"\r\n                    type=\"string\"\r\n                    as={TextField}\r\n                    label=\"Username\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <AccountCircle />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <ErrorMessage name=\"username\" />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Field\r\n                    required\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    as={TextField}\r\n                    label=\"Password\"\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <LockRounded />\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <ErrorMessage name=\"password\" />\r\n                </Grid>\r\n                <div style={{ height: 20 }}></div>\r\n                <Grid item>\r\n                  <Box marginBottom={2}>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting || isValidating}\r\n                      className={classes.buttonBlock}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Box>\r\n                </Grid>\r\n                <div style={{ height: 5 }}></div>\r\n                <Grid item>\r\n                  <Box>\r\n                    <Button\r\n                      color=\"default\"\r\n                      type=\"submit\"\r\n                      onClick={() => navigate(\"/register\")}\r\n                      className={classes.buttonBlock}\r\n                    >\r\n                      Register\r\n                    </Button>\r\n                  </Box>\r\n                </Grid>\r\n                <div style={{ height: 5 }}></div>\r\n              </Form>\r\n              <Grid item>\r\n                <Box>\r\n                  <Button\r\n                    color=\"default\"\r\n                    type=\"submit\"\r\n                    onClick={() => {\r\n                      dispatch(\r\n                        loginUser({\r\n                          username: \"username1\",\r\n                          password: \"Password123\",\r\n                        })\r\n                      );\r\n                      navigate(\"/home\");\r\n                    }}\r\n                    className={classes.buttonBlock}\r\n                  >\r\n                    Demo Login\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nconst instance = axios.create();\r\n\r\nexport function createUser(values) {\r\n  const url = `${API_URL}/auth/register`;\r\n  console.log(JSON.stringify(values));\r\n\r\n  return instance\r\n    .post(url, {\r\n      name: values.name,\r\n      username: values.username,\r\n      password: values.password,\r\n    })\r\n    .then(res => {\r\n      return res.status === 200;\r\n    })\r\n    .catch(res => {\r\n      console.log(\"Registration Completed : \" + JSON.stringify(res));\r\n      return false;\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  FormGroup,\r\n  Typography,\r\n  TextField,\r\n  makeStyles,\r\n  Link,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ErrorMessage, Form, Formik, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { createUser } from \"../services/UserServices\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  centerDiv: {\r\n    minWidth: \"900px\",\r\n    position: \"absolute\",\r\n    left: \"50%\",\r\n    top: \"40%\",\r\n    transform: \"translate(-50%, -40%)\",\r\n  },\r\n  wrapDiv: {\r\n    padding: theme.spacing(2, 2),\r\n  },\r\n  regPaper: {\r\n    width: \"300px\",\r\n    align: \"center\",\r\n    display: \"block\",\r\n    padding: theme.spacing(2, 2),\r\n    margin: theme.spacing(8, 2),\r\n  },\r\n  paperStyles: {\r\n    minWidth: \"900px\",\r\n    // padding: theme.spacing(2, 0),\r\n  },\r\n  buttonBlock: {\r\n    width: \"90%\",\r\n    margin: \"auto auto\",\r\n    display: \"block\",\r\n  },\r\n}));\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  username: \"\",\r\n  password: \"\",\r\n  passwordConfirmation: \"\",\r\n};\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className={classes.centerDiv}>\r\n      <Paper className={classes.paperStyles}>\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={7}>\r\n            <div className={classes.wrapDiv}>\r\n              <img\r\n                src={process.env.PUBLIC_URL + \"/assets/register_side.svg\"}\r\n                width=\"100%\"\r\n                height=\"auto\"\r\n                backgroundRepeat=\"no-repeat\"\r\n                backgroundSize=\"cover\"\r\n                alt=\"logo\"\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <div className={classes.regPaper}>\r\n              <div>\r\n                <img\r\n                  src={process.env.PUBLIC_URL + \"/assets/register_top.png\"}\r\n                  width={50}\r\n                  height={50}\r\n                  alt=\"logo\"\r\n                />\r\n                <Typography variant=\"h4\">Social Media App</Typography>\r\n              </div>\r\n              <div>\r\n                <Typography variant=\"h6\">Registration</Typography>\r\n              </div>\r\n\r\n              <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={Yup.object().shape({\r\n                  name: Yup.string()\r\n                    .required()\r\n                    .min(6, \"Name needs to be atleast 6 character long\")\r\n                    .max(50, \"Name cannot be more than 50 characters long4\"),\r\n                  username: Yup.string()\r\n                    .required(\"User Name is required\")\r\n                    .test(\r\n                      \"username\",\r\n                      \"Username Exists already\",\r\n                      (value, context) => {\r\n                        //console.log(UserService.checkUsernameExist(value).then((response)=> Boolean(response) ));\r\n                        //return !( value === 'user1');\r\n                        // let returnvalue = checkUsernameExist(value);\r\n                        // console.log(JSON.stringify(returnvalue));\r\n                        // return returnvalue;\r\n                        return true;\r\n                      }\r\n                    )\r\n                    .min(6, \"Username must be at least 6 characters\")\r\n                    .max(50, \"Username must be less 50 characters\"),\r\n                  password: Yup.string()\r\n                    .min(8, \"Password must be at least 8 characters\")\r\n                    .max(50, \"Password must be less than 50 characters\")\r\n                    .matches(\r\n                      /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\r\n                      \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\r\n                    )\r\n                    .required(\"Password is required\"),\r\n                  passwordConfirmation: Yup.string()\r\n                    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n                    .required(\"Confirm Password is required\"),\r\n                })}\r\n                onSubmit={(values, formikHelpers) => {\r\n                  createUser(values)\r\n                    .then(response => {\r\n                      console.log(JSON.stringify(response));\r\n                      // dispatch(\r\n                      //   setSnackbar(\r\n                      //     true,\r\n                      //     \"success\",\r\n                      //     \"User Registration Successful\"\r\n                      //   )\r\n                      // );\r\n                      navigate(\"/\");\r\n                    })\r\n                    .catch\r\n                    // dispatch(\r\n                    //   setSnackbar(true, \"error\", \"User Registration Failed\")\r\n                    // )\r\n                    ();\r\n                }}\r\n              >\r\n                {({ values, errors, isSubmitting, isValidating }) => (\r\n                  <Form>\r\n                    <Box marginBottom={2}>\r\n                      <FormGroup>\r\n                        <Field\r\n                          required\r\n                          name=\"name\"\r\n                          type=\"string\"\r\n                          as={TextField}\r\n                          label=\"Full Name\"\r\n                        />\r\n                        <ErrorMessage name=\"name\" />\r\n                      </FormGroup>\r\n                    </Box>\r\n                    <Box marginBottom={2}>\r\n                      <FormGroup>\r\n                        <Field\r\n                          required\r\n                          name=\"username\"\r\n                          type=\"string\"\r\n                          as={TextField}\r\n                          label=\"User Name\"\r\n                        />\r\n                        <ErrorMessage name=\"username\" />\r\n                      </FormGroup>\r\n                    </Box>\r\n                    <Box marginBottom={2}>\r\n                      <FormGroup>\r\n                        <Field\r\n                          required\r\n                          id=\"password\"\r\n                          name=\"password\"\r\n                          label=\"Password\"\r\n                          as={TextField}\r\n                          type=\"password\"\r\n                          autoComplete=\"current-password\"\r\n                        />\r\n                        <ErrorMessage name=\"password\" />\r\n                      </FormGroup>\r\n                    </Box>\r\n                    <Box marginBottom={2}>\r\n                      <FormGroup>\r\n                        <Field\r\n                          required\r\n                          id=\"passwordConfirmation\"\r\n                          name=\"passwordConfirmation\"\r\n                          label=\"Confirm Password\"\r\n                          as={TextField}\r\n                          type=\"password\"\r\n                          autoComplete=\"current-password\"\r\n                        />\r\n                        <ErrorMessage name=\"passwordConfirmation\" />\r\n                      </FormGroup>\r\n                    </Box>\r\n                    <div />\r\n                    <Box marginBottom={1}>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        disabled={isSubmitting || isValidating}\r\n                        className={classes.buttonBlock}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Box>\r\n                    <Box marginBottom={1}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        type=\"reset\"\r\n                        disabled={isSubmitting || isValidating}\r\n                        className={classes.buttonBlock}\r\n                      >\r\n                        Reset\r\n                      </Button>\r\n                    </Box>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n              <Typography variant=\"subtitle1\">\r\n                Already Registered?{\" \"}\r\n                <Link onClick={() => navigate(\"/\")}>Login</Link>\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useAuth = () => {\r\n  return useSelector(state => state.auth.authenticated) || false;\r\n};\r\n\r\nexport default function RequireAuth() {\r\n  return useAuth() ? <Outlet /> : <Navigate to=\"/\" />;\r\n}\r\n","import axios from \"axios\";\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nconst instance = axios.create();\r\ninstance.defaults.withCredentials = true;\r\n\r\nexport async function createPost(values) {\r\n  const url = `${API_URL}/posts`;\r\n  // console.log(JSON.stringify(values));\r\n\r\n  try {\r\n    const res = await instance.post(url, values);\r\n    return res.status === 200;\r\n  } catch (res_1) {\r\n    console.log(\"Post Creation Failed : \" + JSON.stringify(res_1));\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function getAllPost() {\r\n  const url = `${API_URL}/posts`;\r\n  return instance\r\n    .get(url)\r\n    .then(res => {\r\n      if (res.data.constructor.toString().indexOf(\"Array\") > -1) {\r\n        return res.data;\r\n      } else {\r\n        return [];\r\n      }\r\n    })\r\n    .catch(res => console.log(\"Post Fetching Failed : \" + JSON.stringify(res)));\r\n}\r\n\r\nexport async function getPostsByUsername(username) {\r\n  const url = `${API_URL}/posts/${username}`;\r\n  return instance\r\n    .get(url)\r\n    .then(res => {\r\n      if (res.data.constructor.toString().indexOf(\"Array\") > -1) {\r\n        return res.data;\r\n      } else {\r\n        return [];\r\n      }\r\n    })\r\n    .catch(res => console.log(\"Post Fetching Failed : \" + JSON.stringify(res)));\r\n}\r\n\r\nexport async function deleteById(id) {\r\n  const url = `${API_URL}/posts/${id}`;\r\n  return instance\r\n    .delete(url)\r\n    .then(res => {\r\n      console.log(res);\r\n      return true;\r\n    })\r\n    .catch(res => {\r\n      console.log(\"Deletion Failed\");\r\n      return false;\r\n    });\r\n}\r\n","export const SET_SNACKBAR = \"SET_SNACKBAR\";\r\n\r\nconst initialState = {\r\n  snackbarOpen: false,\r\n  snackbarType: \"success\",\r\n  snackbarMessage: \"\",\r\n};\r\n\r\nconst reducerSnackbar = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_SNACKBAR:\r\n      const { snackbarOpen, snackbarMessage, snackbarType } = action;\r\n\r\n      return {\r\n        ...state,\r\n        snackbarOpen,\r\n        snackbarType,\r\n        snackbarMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setSnackbar = (\r\n  snackbarOpen,\r\n  snackbarType = \"success\",\r\n  snackbarMessage = \"\"\r\n) => ({\r\n  type: SET_SNACKBAR,\r\n  snackbarOpen,\r\n  snackbarType,\r\n  snackbarMessage,\r\n});\r\n\r\nexport default reducerSnackbar;\r\n","const SET_TRUE = \"SET_TRUE\";\r\nconst SET_FALSE = \"SET_FALSE\";\r\n\r\nconst initialState = {\r\n  boolTrigger: false,\r\n};\r\n\r\nconst triggerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TRUE:\r\n      return {\r\n        boolTrigger: true,\r\n      };\r\n    case SET_FALSE:\r\n      return {\r\n        boolTrigger: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setTrigger = () => ({\r\n  type: SET_TRUE,\r\n});\r\n\r\nexport const resetTrigger = () => ({\r\n  type: SET_FALSE,\r\n});\r\n\r\nexport default triggerReducer;\r\n","import React from \"react\";\r\nimport {\r\n  DialogTitle,\r\n  DialogContent,\r\n  FormGroup,\r\n  TextField,\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n} from \"@mui/material\";\r\nimport { ErrorMessage, Form, Formik, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPost } from \"../services/PostService\";\r\nimport { setSnackbar } from \"../redux/ducks/Snackbar\";\r\nimport { setTrigger } from \"../redux/ducks/Trigger\";\r\n\r\nconst initialValues = {\r\n  title: \"\",\r\n  message: \"\",\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonBlock: {\r\n    margin: \"10px\",\r\n    display: \"inline-block\",\r\n  },\r\n}));\r\n\r\nexport default function CreatePost() {\r\n  const username = useSelector(state => state.auth.username);\r\n\r\n  const classes = useStyles();\r\n  // const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Create Post\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Create Post</DialogTitle>\r\n        <DialogContent>\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={Yup.object().shape({\r\n              title: Yup.string()\r\n                .required(\"Title is required\")\r\n                .min(6, \"Title Needs to be atleast 6 characters long\")\r\n                .max(50, \"Title cannot be more than 50 characters long\"),\r\n              message: Yup.string()\r\n                .required(\"Message is required\")\r\n                .min(3, \"Message should be minimum 3 characters\")\r\n                .max(255, \"Message cannot be more than 255 characters long\"),\r\n            })}\r\n            onSubmit={(values, formikHelpers) => {\r\n              createPost({\r\n                username: username,\r\n                title: values.title,\r\n                message: values.message,\r\n              })\r\n                .then(response => {\r\n                  dispatch(setSnackbar(true, \"success\", \"New Post Created\"));\r\n                  dispatch(setTrigger());\r\n                })\r\n                .catch(\r\n                  dispatch(setSnackbar(true, \"error\", \"Post Creation Failed\"))\r\n                );\r\n              setOpen(false);\r\n              console.log(\"Message submitted\");\r\n            }}\r\n          >\r\n            {({ values, errors, isSubmitting, isValidating }) => (\r\n              <Form>\r\n                <Box marginBottom={2}>\r\n                  <FormGroup>\r\n                    <Field\r\n                      required\r\n                      name=\"title\"\r\n                      type=\"string\"\r\n                      as={TextField}\r\n                      label=\"Title\"\r\n                    />\r\n                    <ErrorMessage name=\"title\" />\r\n                  </FormGroup>\r\n                </Box>\r\n                <Box marginBottom={2}>\r\n                  <FormGroup>\r\n                    <Field\r\n                      required\r\n                      name=\"message\"\r\n                      type=\"string\"\r\n                      as={TextField}\r\n                      multiline\r\n                      rows={4}\r\n                      label=\"Message\"\r\n                    />\r\n                    <ErrorMessage name=\"message\" />\r\n                  </FormGroup>\r\n                </Box>\r\n                <Box marginBottom={1}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting || isValidating}\r\n                    className={classes.buttonBlock}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    type=\"reset\"\r\n                    disabled={isSubmitting || isValidating}\r\n                    className={classes.buttonBlock}\r\n                  >\r\n                    Reset\r\n                  </Button>\r\n                </Box>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  makeStyles,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { deleteById } from \"../services/PostService\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSnackbar } from \"../redux/ducks/Snackbar\";\r\nimport { setTrigger } from \"../redux/ducks/Trigger\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardStyle: {\r\n    width: \"600px\",\r\n  },\r\n  cardActions: {\r\n    display: \"flex\",\r\n    alignItem: \"right\",\r\n  },\r\n}));\r\n\r\nexport function PostWithImage(props) {\r\n  const classes = useStyles();\r\n  const { username, name, message } = props.post;\r\n\r\n  return (\r\n    <Card className={classes.cardStyle}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"140\"\r\n          image=\"/assets/login_side.svg\"\r\n          alt=\"green iguana\"\r\n        />\r\n        <CardContent>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"div\"\r\n            style={{ textAlign: \"left\" }}\r\n          >\r\n            {name}\r\n          </Typography>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h6\"\r\n            component=\"div\"\r\n            style={{ textAlign: \"left\" }}\r\n          >\r\n            {username}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {message}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"secondary\">\r\n          Remove\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport function PostWithOutImage(props) {\r\n  const classes = useStyles();\r\n  const { _id, username, name, message, title } = props.post;\r\n  const currentUsername = props.currentUsername;\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Card className={classes.cardStyle}>\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h6\"\r\n            component=\"div\"\r\n            style={{ textAlign: \"left\" }}\r\n          >\r\n            {name}\r\n          </Typography>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"subtitle1\"\r\n            component=\"div\"\r\n            style={{ textAlign: \"left\" }}\r\n          >\r\n            <Link to=\"/home/user\" state={{ username }}>\r\n              {username}\r\n            </Link>\r\n          </Typography>\r\n\r\n          <Typography\r\n            variant=\"h6\"\r\n            component=\"div\"\r\n            style={{ textAlign: \"left\" }}\r\n          >\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n            {message}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions\r\n        sx={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          p: 1,\r\n          m: 1,\r\n          justifyContent: \"flex-end\",\r\n        }}\r\n      >\r\n        {currentUsername === username && (\r\n          <IconButton aria-label=\"delete\" size=\"small\">\r\n            <DeleteIcon\r\n              fontSize=\"small\"\r\n              onClick={() => {\r\n                deleteById(_id.valueOf())\r\n                  .then(() => {\r\n                    dispatch(setSnackbar(true, \"success\", \"Post Deleted\"));\r\n                    dispatch(setTrigger());\r\n                  })\r\n                  .catch(() => {\r\n                    dispatch(setSnackbar(true, \"error\", \"Deletion Failed\"));\r\n                  });\r\n              }}\r\n            />\r\n          </IconButton>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CreatePost from \"../components/CreatePost\";\r\nimport { getAllPost } from \"../services/PostService\";\r\nimport { useEffect } from \"react\";\r\nimport { PostWithOutImage } from \"../components/Post\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { resetTrigger } from \"../redux/ducks/Trigger\";\r\n\r\nexport default function NewsFeed() {\r\n  const [postList, setPostLists] = useState([]);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const stableDispatch = useCallback(dispatch, [dispatch]);\r\n\r\n  const reload = useSelector(state => state.trigger.boolTrigger);\r\n  const username = useSelector(state => state.auth.username);\r\n\r\n  useEffect(() => {\r\n    console.log(\"NewFeed Page Loaded\");\r\n    getAllPost()\r\n      .then(res => setPostLists(res))\r\n      .catch(res => {\r\n        console.log(res);\r\n        navigate(\"/error\");\r\n      });\r\n    stableDispatch(resetTrigger());\r\n  }, [postList.length, reload, navigate, stableDispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n        <Grid item>\r\n          <div />\r\n        </Grid>\r\n        <Grid item>\r\n          <CreatePost />\r\n        </Grid>\r\n        {postList.map((eachItem, key) => (\r\n          <Grid item key={key}>\r\n            {<PostWithOutImage post={eachItem} currentUsername={username} />}\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function CreatePost() {\r\n  return <p>Create Post</p>;\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { setSnackbar } from \"../redux/ducks/Snackbar\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst CustomizedSnackbars = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const snackbarOpen = useSelector(state => state.snackbar.snackbarOpen);\r\n  const snackbarType = useSelector(state => state.snackbar.snackbarType);\r\n  //Snack Bar Types available - error , warning , info , success\r\n  const snackbarMessage = useSelector(state => state.snackbar.snackbarMessage);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    dispatch(setSnackbar(false, snackbarType, snackbarMessage));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar\r\n        open={snackbarOpen}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert\r\n          elevation={6}\r\n          variant=\"filled\"\r\n          onClose={handleClose}\r\n          color={snackbarType}\r\n        >\r\n          {snackbarMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomizedSnackbars;\r\n","import React from \"react\";\r\n\r\nexport default function Error() {\r\n  return <div>Error</div>;\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { Grid, Button, Typography } from \"@material-ui/core\";\r\nimport { useEffect } from \"react\";\r\nimport { PostWithOutImage } from \"../components/Post\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { resetTrigger } from \"../redux/ducks/Trigger\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getPostsByUsername } from \"../services/PostService\";\r\n\r\nexport default function NewsFeedUser(props) {\r\n  const [postList, setPostLists] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n  const stableNavigate = useCallback(navigate, [navigate]);\r\n\r\n  const dispatch = useDispatch();\r\n  const stableDispatch = useCallback(dispatch, [dispatch]);\r\n  const location = useLocation();\r\n\r\n  const reload = useSelector(state => state.trigger.boolTrigger);\r\n  const username = useSelector(state => state.auth.username);\r\n  const name = useSelector(state => state.auth.name);\r\n\r\n  useEffect(() => {\r\n    getPostsByUsername(location.state.username)\r\n      .then(res => setPostLists(res))\r\n      .catch(res => {\r\n        console.log(res);\r\n        stableNavigate(\"/error\");\r\n      });\r\n    stableDispatch(resetTrigger());\r\n  }, [\r\n    postList.length,\r\n    reload,\r\n    stableDispatch,\r\n    stableNavigate,\r\n    location.state.username,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n        <Grid item>\r\n          <div />\r\n        </Grid>\r\n        <Grid item>\r\n          <div />\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"h3\" gutterBottom component=\"div\">\r\n            {name}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <div />\r\n        </Grid>\r\n        <Grid item>\r\n          <div />\r\n        </Grid>\r\n        {postList.map((eachItem, key) => (\r\n          <Grid item key={key}>\r\n            {<PostWithOutImage post={eachItem} currentUsername={username} />}\r\n          </Grid>\r\n        ))}\r\n        <Grid item>\r\n          <Button variant=\"contained\" onClick={() => navigate(-1)}>\r\n            Back\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Main from \"./pages/Main.jsx\";\nimport LoginPage from \"./pages/LoginPage\";\nimport Register from \"./pages/Register\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport RequireAuth from \"./components/RequireAuth\";\nimport NewsFeed from \"./pages/NewsFeed\";\nimport CreatePost from \"./pages/CreatePost\";\nimport Snackbar from \"./components/CustomizedSnackBar\";\nimport Error from \"./pages/Error\";\nimport NewsFeedUser from \"./pages/NewsFeedUser\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Snackbar />\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<LoginPage />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route element={<RequireAuth />}>\n            <Route path=\"/home\" element={<Main />}>\n              <Route path=\"/home\" element={<NewsFeed />} />\n              <Route path=\"/home/addpost\" element={<CreatePost />} />\n              <Route path=\"/home/user\" element={<NewsFeedUser />} />\n            </Route>\n          </Route>\n          <Route path=\"/error\" element={<Error />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nconst instance = axios.create();\r\ninstance.defaults.withCredentials = true;\r\n\r\nexport function authenticationUser(values) {\r\n  let payload = values;\r\n  console.log(\"Authentication Call\");\r\n  return instance.request({\r\n    method: \"POST\",\r\n    data: payload,\r\n    url: `${API_URL}/auth/login`,\r\n  });\r\n}\r\n\r\nexport function refreshToken() {\r\n  return instance.request({\r\n    method: \"POST\",\r\n    url: `${API_URL}/auth/refresh`,\r\n  });\r\n}\r\n\r\nexport function cancelToken() {\r\n  return instance.request({\r\n    method: \"POST\",\r\n    url: `${API_URL}/auth/cancel`,\r\n  });\r\n}\r\n","import { call, put } from \"redux-saga/effects\";\r\nimport {\r\n  authenticationUser,\r\n  cancelToken,\r\n  refreshToken,\r\n} from \"../requests/Authentication\";\r\nimport { setAuthenticated } from \"../../ducks/Authentication\";\r\nimport { setSnackbar } from \"../../ducks/Snackbar\";\r\n\r\nexport function* handleLoginUser(action) {\r\n  try {\r\n    console.log(\"Handle Login User\");\r\n    console.log(\"login user action called\");\r\n    const response = yield call(authenticationUser, action.payload);\r\n\r\n    if (response.status !== 200) throw Error(\"Login Failed\");\r\n\r\n    yield put(\r\n      setAuthenticated(true, response.data.username, response.data.name)\r\n    );\r\n    yield put(setSnackbar(true, \"success\", \"Log In Successful\"));\r\n  } catch (e) {\r\n    yield put(setAuthenticated(false));\r\n    yield put(setSnackbar(true, \"error\", \"Log In Failed\"));\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport function* handleRefreshToken(action) {\r\n  let authentication = false;\r\n  console.log(\"Handle refresh token\");\r\n  try {\r\n    console.log(\"handler caught\");\r\n    const response = yield call(refreshToken);\r\n    if (response.status === 200) {\r\n      authentication = true;\r\n    }\r\n    yield put(\r\n      setAuthenticated(\r\n        authentication,\r\n        response.data.username,\r\n        response.data.name\r\n      )\r\n    );\r\n  } catch (error) {\r\n    yield put(setAuthenticated(authentication, null, null));\r\n  }\r\n}\r\n\r\nexport function* handleLogoutUser(action) {\r\n  try {\r\n    console.log(\"Handle Log Out \");\r\n    yield put(setAuthenticated(false, null, null));\r\n    const response = yield call(cancelToken);\r\n    if (response.status === 200) throw Error(\"Log Out Failed\");\r\n    yield put(setSnackbar(true, \"success\", \"Log Out Successful\"));\r\n  } catch (error) {\r\n    console.log();\r\n    yield put(setSnackbar(true, \"error\", \"Log Out Failed\"));\r\n  }\r\n}\r\n","import {\r\n  handleLoginUser,\r\n  handleLogoutUser,\r\n  handleRefreshToken,\r\n} from \"./handlers/Authentication\";\r\nimport {\r\n  LOGIN_USER,\r\n  REFRESH_TOKEN,\r\n  LOGOUT_USER,\r\n} from \"../ducks/Authentication\";\r\nimport { takeLatest } from \"redux-saga/effects\";\r\n\r\nexport function* watcherSaga() {\r\n  yield takeLatest(LOGIN_USER, handleLoginUser);\r\n  yield takeLatest(LOGOUT_USER, handleLogoutUser);\r\n  yield takeLatest(REFRESH_TOKEN, handleRefreshToken);\r\n}\r\n","import authReducer from \"../redux/ducks/Authentication\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport snackbarReducer from \"./ducks/Snackbar\";\r\nimport logger from \"redux-logger\";\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { watcherSaga } from \"./sagas/rootSaga\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport triggerReducer from \"./ducks/Trigger\";\r\n\r\n//Functions to store and retreive the state\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) return undefined;\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\n//Combine Reducers\r\nconst rootReducer = combineReducers({\r\n  snackbar: snackbarReducer,\r\n  auth: authReducer,\r\n  trigger: triggerReducer,\r\n});\r\n\r\n//Saga Middleware creation\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware, logger];\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  persistedState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nsagaMiddleware.run(watcherSaga);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/ConfigureStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}